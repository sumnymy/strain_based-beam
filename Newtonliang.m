E=72000; A=9;L=50; I=81/12;                                              % 弹性模量E，杆截面积A，杆长L，截惯矩I
F=[0;0;0;0;0;0];e=[0;0;0;0;0;0];zd=[0;0;0;0;0;0];                         %首次增量步前的总施加载荷F，载荷残量e，总伸长zd，
P=[0;0;0;-90000;1;0]; r=1; m=0;                                         %总施加载荷P, 初始载荷步百分比r，总迭代次数       
K01=E*A/L; K02=12*E*I/L^3; K03=6*E*I/L^2; K04=E*I/L;                      %弹性刚度矩阵K0
K0=[K01,0,0,-K01,0,0; 0,K02,K03,0,-K02,K03; 0,K03,4*K04,0,-K03,2*K04; -K01,0,0,K01,0,0; 0,-K02,-K03,0,K02,-K03; 0,K03,2*K04,0,-K03,4*K04]
K=K0;KK=K0; Kg=0;KL=0;                                                             %KK被用于置大数法求解中

fid = fopen('newton-liang.txt','w');

for j=1:200000;                                                              %设定最大增量步j
    disp('增量步起始.........................!'),j  
    dF=[0;0;0;r*P(4);r*P(5);r*P(6)];                                                  %本次增量步的载荷增量dF
    %if(abs(j-1)<=1e-5)                                                                %施加初始载荷缺陷
        %dF(5)=2;
    %end        
    .....%本次增量步里首次迭代，得到位移初值d0，节点平衡力返回dF....
    dF(1)=0*1E15*KK(1,1); KK(1,1)=KK(1,1)*1E15; dF(2)=0*1E15*KK(2,2); KK(2,2)=KK(2,2)*1E15; dF(3)=0*1E15*KK(3,3); KK(3,3)=KK(3,3)*1E15;                        
    d0=(KK^-1)*dF, dF=K*d0;
    ..........................end...............................
    d=zd+d0;                                                                %叠加前几个增量步的总位移zd, 得出本次增量步再次迭代时的总位移
    ...........以下为本次增量步内的非线性方程组迭代程序............
    for i=1:100;
        %本次迭代的弹性刚度矩阵K0 的形成 
        K01=E*A/L; K02=12*E*I/L^3; K03=6*E*I/L^2; K04=E*I/L;
        K0=[K01,0,0,-K01,0,0; 0,K02,K03,0,-K02,K03; 0,K03,4*K04,0,-K03,2*K04; -K01,0,0,K01,0,0; 0,-K02,-K03,0,K02,-K03; 0,K03,2*K04,0,-K03,4*K04]; %本次迭代的总刚形成
        %本次迭代的大位移刚度矩阵KL 的形成
        a1=(6*L/5)*(d(5)-d(2))-(L^2/10)*(d(3)+d(6)); a2=(L^2/10)*(d(5)-d(2))+(L^3/30)*(d(6)-4*d(3)); a3=(L^2/10)*(d(5)-d(2))+(L^3/30)*(d(3)-4*d(6)); b1=(72/35)*(d(5)-d(2))^2+(3*L^3/35)*(d(3)^2+d(6)^2)-(18*L/35)*(d(5)-d(2))*(d(3)+d(6));       
        b2=(9*L/35)*(d(5)-d(2))^2+(L^3/140)*(d(6)^2-d(3)^2)-(6*L^2/35)*(d(5)-d(2))*d(3)+(L^3/70)*d(3)*d(6); b3=(9*L/35)*(d(5)-d(2))^2-(L^3/140)*(d(6)^2-d(3)^2)-(6*L^2/35)*(d(5)-d(2))*d(3)+(L^3/70)*d(3)*d(6); b4=(3*L^2/35)*(d(5)-d(2))^2-(L^3/70)*(d(5)-d(2))*(d(6)-d(3))+(L^4/210)*(12*d(3)^2+d(6)^2-3*d(3)*d(6));
        b5=(L^3/70)*(d(5)-d(2))*(d(6)+d(3))-(L^4/420)*(3*d(3)^2+d(6)^2-4*d(3)*d(6)); b6=(3*L^2/35)*(d(5)-d(2))^2+(L^3/70)*(d(5)-d(2))*(d(6)-d(3))+(L^4/210)*(d(3)^2+12*d(6)^2-3*d(3)*d(6));
        KL=[0,a1,a2,0,-a1,-a3; a1,b1,b2,-a1,-b1,b3; a2,b2,b4,-a2,-b2,b6; 0,-a1,-a2,0,a1,-a3; -a1,-b1,-b2,a1,b1,-b3; -a3,b3,b6,-a3,-b3,b4]
        %本次迭代的初应力刚度矩阵Kg 的形成
        Kg1=6/5+(12*I)/(A*L^2); Kg2=L/10+6*L/A*L; Kg3=2*L^2/15+4*I/A; Kg4=-L^2/30+2*I/A;
        %Kg=((F(4)+dF(4))/L)*[1,0,0,-1,0,0; 0,Kg1,Kg2,0,-Kg1,Kg2; 0,Kg2,Kg3,0,-Kg2,Kg4; -1,0,0,1,0,0; 0,-Kg1,-Kg2,0,Kg1,-Kg2; 0,Kg2,Kg4,0,-Kg2,Kg4];
        %Kg1=6/5; Kg2=L/10; Kg3=2*L^2/15; Kg4=-L^2/30;
        %Kg=((F(4)+dF(4))/L)*[0,0,0,0,0,0; 0,Kg1,Kg2,0,-Kg1,Kg2; 0,Kg2,Kg3,0,-Kg2,Kg4; 0,0,0,0,0,0; 0,-Kg1,-Kg2,0,Kg1,-Kg2; 0,Kg2,Kg4,0,-Kg2,Kg4];
        
        DK=KL+Kg; K=K0+DK;
        ....置大数法求解....
        CF=dF-(K*d-F);                                                      %本次迭代的载荷残量CF 
        KK=K;
        CF(1)=0*1E15*KK(1,1);KK(1,1)=KK(1,1)*1E15; CF(2)=0*1E15*KK(2,2);KK(2,2)=KK(2,2)*1E15; CF(3)=0*1E15*KK(3,3);KK(3,3)=KK(3,3)*1E15; 
        Dd=(KK^-1)*CF                                                      %计算本次迭代的位移增量Dd: 其中K^-1也可采用SMI法
        ...................
        if(norm(Dd)<=1e-10);                                                %判断本增量步内前后两次迭代计算的位移变化量是否小于1e-3
            d=d+Dd; break;                                                  %小于：迭代收敛，跳出       
        else                                                                %大于：迭加位移增量，返回继续迭代  
            d=d+Dd;    
        end    
    end
    ...........................end.............................
    disp('%本次增量步内的总迭代次数 i'),i
    disp('%总迭代次数 m'),m=m+i;
    disp('%本次增量步迭代结束后的总位移 d'),d
    
    
    ...............................本增量步迭代结束后的结果检验!................................................
    jd=d;jF=F(4)+dF(4);
    K01=E*A/L; K02=12*E*I/L^3; K03=6*E*I/L^2; K04=E*I/L;
    K0=[K01,0,0,-K01,0,0; 0,K02,K03,0,-K02,K03; 0,K03,4*K04,0,-K03,2*K04; -K01,0,0,K01,0,0; 0,-K02,-K03,0,K02,-K03; 0,K03,2*K04,0,-K03,4*K04]; %本次迭代的总刚形成
    a1=(6*L/5)*(d(5)-d(2))-(L^2/10)*(d(3)+d(6)); a2=(L^2/10)*(d(5)-d(2))+(L^3/30)*(d(6)-4*d(3)); a3=(L^2/10)*(d(5)-d(2))+(L^3/30)*(d(3)-4*d(6)); b1=(72/35)*(d(5)-d(2))^2+(3*L^3/35)*(d(3)^2+d(6)^2)-(18*L/35)*(d(5)-d(2))*(d(3)+d(6));       
    b2=(9*L/35)*(d(5)-d(2))^2+(L^3/140)*(d(6)^2-d(3)^2)-(6*L^2/35)*(d(5)-d(2))*d(3)+(L^3/70)*d(3)*d(6); b3=(9*L/35)*(d(5)-d(2))^2-(L^3/140)*(d(6)^2-d(3)^2)-(6*L^2/35)*(d(5)-d(2))*d(3)+(L^3/70)*d(3)*d(6); b4=(3*L^2/35)*(d(5)-d(2))^2-(L^3/70)*(d(5)-d(2))*(d(6)-d(3))+(L^4/210)*(12*d(3)^2+d(6)^2-3*d(3)*d(6));
    b5=(L^3/70)*(d(5)-d(2))*(d(6)+d(3))-(L^4/420)*(3*d(3)^2+d(6)^2-4*d(3)*d(6)); b6=(3*L^2/35)*(d(5)-d(2))^2+(L^3/70)*(d(5)-d(2))*(d(6)-d(3))+(L^4/210)*(d(3)^2+12*d(6)^2-3*d(3)*d(6));
    KL=[0,a1,a2,0,-a1,-a3; a1,b1,b2,-a1,-b1,b3; a2,b2,b4,-a2,-b2,b6; 0,-a1,-a2,0,a1,-a3; -a1,-b1,-b2,a1,b1,-b3; -a3,b3,b6,-a3,-b3,b4];
    Kg1=6/5+(12*I)/(A*L^2); Kg2=L/10+6*L/A*L; Kg3=2*L^2/15+4*I/A; Kg4=-L^2/30+2*I/A;
    %Kg=((F(4)+dF(4))/L)*[1,0,0,-1,0,0; 0,Kg1,Kg2,0,-Kg1,Kg2; 0,Kg2,Kg3,0,-Kg2,Kg4; -1,0,0,1,0,0; 0,-Kg1,-Kg2,0,Kg1,-Kg2; 0,Kg2,Kg4,0,-Kg2,Kg4];
    %Kg1=6/5; Kg2=L/10; Kg3=2*L^2/15; Kg4=-L^2/30;
    %Kg=((F(4)+dF(4))/L)*[0,0,0,0,0,0; 0,Kg1,Kg2,0,-Kg1,Kg2; 0,Kg2,Kg3,0,-Kg2,Kg4; 0,0,0,0,0,0; 0,-Kg1,-Kg2,0,Kg1,-Kg2; 0,Kg2,Kg4,0,-Kg2,Kg4];
    DK=KL+Kg, K=K0+DK;jFF=K*jd;
    ee=jF-jFF(4);   
    if(norm(ee)<=1e-3);
        disp('本增量步迭代收敛，计算结果正确'); zd=d;  F=K*d,r=r; %fprintf(fid,'%f        %f       %f        %f\n',-zd(4),zd(5),-zd(6),-F(4));
        fprintf(fid,'%f   %f   %f   %f   %f   %f\n%f   %f   %f   %f   %f   %f\n%f   %f   %f   %f   %f   %f\n%f   %f   %f   %f   %f   %f\n%f   %f   %f   %f   %f   %f\n%f   %f   %f   %f   %f   %f\n\n\n',K);
    else
        disp('本增量步迭代不收敛，计算结果不正确'); break;%zd=d; F=K*d, r=r; fprintf(fid,'%f        %f\n',-zd(4),-F(4)); 
    end
    ........................................end................................................................
    if (abs(F(4)-P(4))<=1e-5)
        disp('载荷已加满！'),break;
    end   
end

fclose(fid);